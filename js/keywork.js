// Generated by CoffeeScript 1.3.3

$(function() {
  var $keywork, BACK_COLOR, BG_PLANET, CENTER, DATE, DAYS, DISTANCE, FRONT_COLOR, HOURS, KEY_SIZE, LEFT, LINE_WIDTH, MINUTES, SECONDS, SM_PLANET, TICK, TOP, createPlanet, getPosition, getTime, keywork;
  $keywork = $("canvas");
  KEY_SIZE = $keywork.width();
  CENTER = LEFT = KEY_SIZE / 2;
  TOP = KEY_SIZE / 2 + 5;
  $keywork.attr({
    height: KEY_SIZE,
    width: KEY_SIZE
  });
  $keywork.css({
    margin: "-" + CENTER + "px 0 0 -" + CENTER + "px"
  });
  BG_PLANET = KEY_SIZE / 5;
  SM_PLANET = KEY_SIZE / 10;
  DISTANCE = CENTER - BG_PLANET;
  LINE_WIDTH = KEY_SIZE / 80;
  BACK_COLOR = "rgba(149,149,149,0.5)";
  FRONT_COLOR = "white";
  keywork = $keywork[0].getContext("2d");
  keywork.lineWidth = LINE_WIDTH;
  getPosition = function(degrees) {
    var RADIANS, x, y;
    RADIANS = Math.PI / 180 * degrees;
    x = LEFT + Math.sin(RADIANS) * DISTANCE;
    y = TOP + Math.cos(RADIANS) * DISTANCE;
    return {
      x: x,
      y: y
    };
  };
  getTime = function(position) {
    return Math.PI / 180 * 360 * position;
  };
  createPlanet = function(x, y, size, start, end, timer) {
    keywork.strokeStyle = timer ? FRONT_COLOR : BACK_COLOR;
    keywork.beginPath();
    keywork.arc(x, y, size, start, end, false);
    keywork.stroke();
    if (timer) {
      keywork.strokeStyle = BACK_COLOR;
      keywork.beginPath();
      keywork.arc(x, y, size, end, 2 * Math.PI, false);
      return keywork.stroke();
    }
  };
  SECONDS = MINUTES = HOURS = DAYS = 0;
  TICK = 0;
  DATE = new Date();
  DATE.setDate(DATE.getDate() + 1);
  return $("#keywork").countdown(DATE, function(e) {
    var ANGLE, POS, TIME, _i, _j, _k;
    switch (e.type) {
      case "seconds":
        SECONDS = e.value / 60;
        break;
      case "minutes":
        MINUTES = e.value / 60;
        break;
      case "hours":
        HOURS = e.value / 24;
        break;
      case "days":
        DAYS = e.value / 4;
    }
    if (e.type === "minutes") {
      if (TICK) {
        $("body").css({
          background: "white"
        });
        FRONT_COLOR = "black";
        TICK = 0;
      } else {
        $("body").css({
          background: "black"
        });
        FRONT_COLOR = "white";
        TICK = 1;
      }
    }
    keywork.clearRect(0, 0, KEY_SIZE, KEY_SIZE);
    for (ANGLE = _i = 0; _i <= 240; ANGLE = _i += 120) {
      POS = getPosition(ANGLE);
      createPlanet(POS.x, POS.y, SM_PLANET, 0, 2 * Math.PI, false);
    }
    for (ANGLE = _j = 60; _j <= 300; ANGLE = _j += 120) {
      POS = getPosition(ANGLE);
      TIME = getTime((function() {
        switch (ANGLE) {
          case 60:
            return SECONDS;
          case 180:
            return MINUTES;
          case 300:
            return HOURS;
        }
      })());
      createPlanet(POS.x, POS.y, BG_PLANET, 0, TIME, true);
    }
    TIME = getTime(DAYS);
    createPlanet(LEFT, TOP, SM_PLANET, 0, TIME, true);
    keywork.strokeStyle = BACK_COLOR;
    keywork.beginPath();
    for (ANGLE = _k = 60; _k <= 300; ANGLE = _k += 120) {
      POS = getPosition(ANGLE);
      keywork.lineTo(POS.x, POS.y);
    }
    keywork.closePath();
    return keywork.stroke();
  });
});
